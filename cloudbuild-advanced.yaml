# Advanced Cloud Build configuration for AIRMS
# Builds both frontend and backend with optimizations

steps:
  # Build backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-backend'
    args:
      - 'build'
      - '-f'
      - 'backend/Dockerfile.advanced'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-backend:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-backend:latest'
      - '--cache-from'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-backend:latest'
      - './backend'
    env:
      - 'DOCKER_BUILDKIT=1'

  # Build frontend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-frontend'
    args:
      - 'build'
      - '-f'
      - 'frontend/Dockerfile.advanced'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-frontend:${SHORT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-frontend:latest'
      - '--build-arg'
      - 'NEXT_PUBLIC_API_URL=${_BACKEND_URL}'
      - '--cache-from'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-frontend:latest'
      - './frontend'
    env:
      - 'DOCKER_BUILDKIT=1'

  # Push backend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-backend:${SHORT_SHA}'
    waitFor: ['build-backend']

  # Push backend latest tag
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-backend-latest'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-backend:latest'
    waitFor: ['build-backend']

  # Push frontend image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-frontend:${SHORT_SHA}'
    waitFor: ['build-frontend']

  # Push frontend latest tag
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-frontend-latest'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-frontend:latest'
    waitFor: ['build-frontend']

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-backend'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_BACKEND_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-backend:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8000'
      - '--memory'
      - '${_BACKEND_MEMORY}'
      - '--cpu'
      - '${_BACKEND_CPU}'
      - '--min-instances'
      - '${_BACKEND_MIN_INSTANCES}'
      - '--max-instances'
      - '${_BACKEND_MAX_INSTANCES}'
      - '--set-env-vars'
      - 'ENVIRONMENT=${_ENVIRONMENT},DATABASE_URL=${_DATABASE_URL},JWT_SECRET_KEY=${_JWT_SECRET_KEY}'
      - '--service-account'
      - '${_BACKEND_SERVICE_ACCOUNT}'
    waitFor: ['push-backend']

  # Deploy frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy-frontend'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_FRONTEND_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-frontend:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '${_FRONTEND_MEMORY}'
      - '--cpu'
      - '${_FRONTEND_CPU}'
      - '--min-instances'
      - '${_FRONTEND_MIN_INSTANCES}'
      - '--max-instances'
      - '${_FRONTEND_MAX_INSTANCES}'
      - '--set-env-vars'
      - 'NEXT_PUBLIC_API_URL=${_BACKEND_URL},NODE_ENV=production'
      - '--service-account'
      - '${_FRONTEND_SERVICE_ACCOUNT}'
    waitFor: ['push-frontend', 'deploy-backend']

  # Run health checks
  - name: 'gcr.io/cloud-builders/curl'
    id: 'health-check-backend'
    args:
      - '-f'
      - '${_BACKEND_URL}/health'
    waitFor: ['deploy-backend']

  # Security scan (optional)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'security-scan-backend'
    args:
      - 'container'
      - 'images'
      - 'scan'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REPO}/airms-backend:${SHORT_SHA}'
      - '--remote'
    waitFor: ['push-backend']

# Substitutions with defaults
substitutions:
  _ENVIRONMENT: 'dev'
  _REGION: 'us-central1'
  _ARTIFACT_REPO: 'airms-dev'
  _BACKEND_SERVICE_NAME: 'airms-backend-dev'
  _FRONTEND_SERVICE_NAME: 'airms-frontend-dev'
  _BACKEND_URL: 'https://airms-backend-dev-uc.a.run.app'
  _DATABASE_URL: 'postgresql://user:pass@localhost/airms'
  _JWT_SECRET_KEY: 'your-jwt-secret-key'
  _BACKEND_SERVICE_ACCOUNT: 'airms-backend-dev@${PROJECT_ID}.iam.gserviceaccount.com'
  _FRONTEND_SERVICE_ACCOUNT: 'airms-frontend-dev@${PROJECT_ID}.iam.gserviceaccount.com'
  _BACKEND_MEMORY: '2Gi'
  _BACKEND_CPU: '2'
  _BACKEND_MIN_INSTANCES: '0'
  _BACKEND_MAX_INSTANCES: '10'
  _FRONTEND_MEMORY: '1Gi'
  _FRONTEND_CPU: '1'
  _FRONTEND_MIN_INSTANCES: '0'
  _FRONTEND_MAX_INSTANCES: '5'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: 'ALLOW_LOOSE'
  logging: 'CLOUD_LOGGING_ONLY'
  
# Timeout
timeout: '1800s'

# Tags for organization
tags:
  - 'airms'
  - '${_ENVIRONMENT}'
  - 'cloud-run'
